<!DOCTYPE html>
<html lang="en">
  <head>
    <title>Circular Gauge Widget Animation | JSCharting</title>
    <meta http-equiv="content-type" content="text-html; charset=utf-8" />

    <script type="text/javascript" src="../jsc/jscharting.js"></script>
    <script type="text/javascript" src="../jsc/jscharting-widgets.js"></script>

    <link rel="stylesheet" type="text/css" href="css/default.css" />
    <link rel="stylesheet" type="text/css" href="../jsc/resources/widgets.css" />
    <style>
      .jsc-widget .circular .value {
        font-size: 45px;
      }

      #chartDiv1 .jsc-widget .circular .icon {
        color: gray;
        font-size: 25px;
      }
      #chartDiv1 .jsc-widget .circular .value {
        font-size: 50px;
      }

      #chartDiv3 .jsc-widget .circular .value {
        font-size: 37px;
      }

      #widgetsWrapper {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        align-items: center;
        background: #eeeeee;
        padding: 20px;
        box-sizing: border-box;
        width: 100%;
      }
      .chartDiv {
        width: 100%;
        box-sizing: content-box;
        margin: 8px;
        padding: 15px;
        border-radius: 10px;
        background: white;
      }
    </style>
  </head>
  <body>
    <div style="width: 150px; margin: 0 auto;">
      <input type="checkbox" id="modeCheckbox" name="dark" />
      <label for="modeCheckbox">Dark Background</label>
    </div>
    <div id="widgetsWrapper">
      <div id="chartDiv1" class="chartDiv" style="max-width: 275px; height: 300px;"></div>
      <div id="chartDiv2" class="chartDiv" style="max-width: 275px; height: 300px;"></div>
      <div id="chartDiv3" class="chartDiv" style="max-width: 275px; height: 300px;"></div>
    </div>

    <script type="text/javascript">
      /*
Uses the Circular widget object with animation to update data.
Learn how to:

  - Animate Circular widgets.
*/
      // JS

      var checkboxEl = document.getElementById('modeCheckbox');

      checkboxEl.addEventListener('change', function () {
        var color = checkboxEl.checked ? 'black' : 'white';
        var elements = document.getElementsByClassName('chartDiv');
        for (let i = 0; i < elements.length; i++) {
          elements[i].style.backgroundColor = color;
        }
      });

      function str_pad_left(string, pad, length) {
        return (new Array(length + 1).join(pad) + string).slice(-length);
      }

      var widget1 = new JSCWidgets.Circular(
        'chartDiv1',
        {
          title: 'Timer',
          value: 90,
          icon: 'linearicons/hourglass',
          max: 90,
          min: 0,
          color: '#259ca6',
          labelText: (function () {
            var now = new Date();
            now.setSeconds(now.getSeconds() + 90);
            return (
              '<icon name=linearicons/alarm size=15 verticalAlign=middle> ' +
              now.getHours() +
              ':' +
              str_pad_left(now.getMinutes(), '0', 2)
            );
          })(),
          valueText: function (widget) {
            var value = widget.options('value');
            var minutes = Math.floor(value / 60);
            var seconds = value - minutes * 60;
            var ret = str_pad_left(minutes, '0', 2) + ':' + str_pad_left(seconds, '0', 2);
            return ret;
          },
          barWidth: 5,
          barRounded: false,
        },
        function (widget) {
          var timer = setInterval(function () {
            var value = widget.options('value');
            if (value <= 0) {
              clearTimeout(timer);
            } else {
              widget.options({ value: --value }, { animation: { duration: 950 } });
            }
          }, 1000);
        }
      );

      var widget2 = new JSCWidgets.Circular(
        'chartDiv2',
        {
          label: 'HR',
          value: 85,
          icon: 'linearicons/heart-pulse',
          max: 150,
          min: 0,
          color: '#22ab51',
          barWidth: 5,
          barBackgroundWidth: 20,
          barBackgroundColor: 'rgba(188,188,188,.25)',
        },
        function (widget) {
          var iterations = 0;
          var timer = setInterval(function () {
            var newValue = parseInt(80 + Math.random() * 40);
            if (iterations++ > 100) {
              clearTimeout(timer);
            } else {
              widget.options({ value: newValue, color: val2Color(newValue) }, { animation: { duration: 1750 } });
            }
          }, 2000);

          function val2Color(v) {
            if (v > 110) {
              return '#e74b30';
            } else if (v > 100) {
              return '#cbbe22';
            } else {
              return '#159d4b';
            }
          }
        }
      );

      var widget3 = new JSCWidgets.Circular(
        'chartDiv3',
        {
          title: 'May Fundraiser (50k Goal)',
          label: 'Fundraiser',
          value: 45325,
          /* Ensure icon label is not empty even without an icon so reserve the label position. */
          max: 50000,
          color: '#c92c2c',
          valueFormat: 'c0',
          iconText: '%icon ',
          labelText: '{50000-%value:c0} to go!',
          barWidth: 10,
          barBackgroundWidth: 5,
        },
        function (widget) {
          startAnimation();
          var timer,
            iterations = 0;

          function startAnimation() {
            /* Reset widget value without animation. */
            widget.options(
              {
                icon: '',
                value: 46325,
                labelText: '{%max-%value:c0} to go!',
              },
              { animation: { duration: 1650 } }
            );

            timer = setInterval(function () {
              var value = widget.options('value');
              if (value >= 50000) {
                /* Clear the timer when the goal is reached. */
                clearTimeout(timer);
                // Replay after 5 seconds.
                if (iterations < 5) {
                  setTimeout(startAnimation, 5000);
                  iterations++;
                }
              } else {
                /* Add a random donation amount */
                value += Math.floor(Math.random() * 2000);
                var newOptions = { value: value };
                if (value >= 50000) {
                  newOptions.labelText = 'Goal Reached!!';
                  newOptions.icon = 'material/navigation/check';
                }
                widget.options(newOptions, { animation: { duration: 1650 } });
              }
            }, 2000);
          }
        }
      );
    </script>
  </body>
</html>
