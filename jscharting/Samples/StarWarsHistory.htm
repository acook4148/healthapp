<!DOCTYPE html>
<html lang="en">
  <head>
    <title>Interactive Bar Chart Checkboxes | JSCharting</title>
    <meta http-equiv="content-type" content="text-html; charset=utf-8" />

    <script type="text/javascript" src="../jsc/jscharting.js"></script>

    <link rel="stylesheet" type="text/css" href="css/default.css" />

    <style>
      /*CSS*/
    </style>
  </head>
  <body>
    <link href="https://fonts.googleapis.com/css?family=Raleway:900|Roboto&display=swap" rel="stylesheet" />
    <div id="chartDiv" style="max-width: 740px; height: 600px; margin: 0px auto;"></div>

    <script type="text/javascript">
      /*
Interactive bar chart with custom legend entry checkbox.
Learn how to:

  - Use a legend entry checkbox to add interactivity.
*/
      // JS
      var chart;
      var indicators = ['Budget', 'Opening Weekend', 'Domestic Box Office', 'Worldwide Box Office'];
      var palette = {
        Budget: '#FFD600',
        'Opening Weekend': '#6fb98f',
        'Domestic Box Office': '#4595a4',
        'Worldwide Box Office': '#3e4e6d',
      };

      JSC.fetch('./resources/star-wars-history.csv')
        .then(function (response) {
          return response.text();
        })
        .then(function (text) {
          var data = JSC.csv2Json(text);
          JSC.ready(document).then(function (result) {
            JSC.fontsReady(['Raleway', 'Roboto']).then(function (result) {
              console.log('Fonts loaded: ' + result.ok);
              chart = renderChart(data);
            });
          });
        })
        .catch(function (error) {
          console.error(name);
        });

      function renderChart(data) {
        return JSC.chart('chartDiv', {
          type: 'horizontal column solid',
          title_label: {
            text: 'Star Wars Movies in Numbers',
            style: {
              fontFamily: 'Raleway',
              color: 'black',
              fontWeight: 900,
              fontSize: 26,
            },
          },
          defaultTooltip_label: {
            text: makeTooltips,
            style_fontFamily: 'Roboto',
          },
          defaultPoint: {
            label: {
              text: '%seriesName',
              visible: false,
            },
            focusGlow: false,
            tooltip: '%seriesName: <span style="color:%color"><b>{%yValue:c0}</b></span>',
            outline_width: 0,
          },
          legend: {
            position: 'right top',
            template: '%name',
            defaultEntry: {
              style_fontFamily: 'Roboto',
              width: 90,
              margin: 3,
              checkbox: { enabled: true, size: 16 },
            },
            customEntries: [
              {
                name: 'Inflation Adjusted',
                lineAbove: true,
                checkbox: {
                  enabled: true,
                  color: 'black',
                },
                events_click: function () {
                  chart.options({ series: makeSeries(data, this.options('checkbox.checked'), true) });
                },
              },
            ],
          },
          defaultAxis_defaultTick_label_style_fontFamily: 'Roboto',
          xAxis: {
            crosshair: {
              enabled: true,
              label_visible: false,
              gridLine: {
                width: 'column',
                color: '#E0E0E0',
                opacity: 0.6,
              },
            },
          },
          series: makeSeries(data, false),
        });
      }

      function makeSeries(data, adjusted, update) {
        adjusted = adjusted ? 'TRUE' : 'FALSE';
        var series = [];
        indicators.forEach(function (item, i) {
          var result = {
            name: item,
            color: palette[item],
            legendEntry_checkbox_color: palette[item],
            points: data
              .map(function (el) {
                if (el.adjusted_for_inflation === adjusted) {
                  return {
                    name: el.movie,
                    id: el.movie + item,
                    y: el[item],
                    xAxisTick_label_text:
                      '%shortName <span style="color:#adb5bd">(' + JSC.formatDate(el.release_date, 'yyyy') + ')</span>',
                    attributes: {
                      releaseDate: el.release_date,
                      shortName: el.short_name,
                      imdbRating:
                        '<icon name=material/toggle/star size=15 color=#ffd43b verticalAlign=top> ' + el.imdb + '/10',
                      tomatometerScore: tomatoIcon(el.rotten_tomatoes),
                    },
                  };
                }
              })
              .filter(function (el) {
                return el !== undefined;
              }),
          };
          if (!update && (item === 'Budget' || item === 'Opening Weekend')) {
            result.visible = false;
          }
          series.push(result);
        });
        return series;
      }

      function makeTooltips(p) {
        return (
          '<span style="width:200px;">' +
          p[0].tokenValue('%name') +
          '</span><span style="color:#adb5bd">' +
          JSC.formatDate(p[0].tokenValue('%releaseDate'), 'm') +
          ', ' +
          JSC.formatDate(p[0].tokenValue('%releaseDate'), 'yyyy') +
          '</span><br>%points<br><br>' +
          'IMDB: <b>' +
          p[0].tokenValue('%imdbRating') +
          '</b><br>' +
          'Tomatometer: <b>' +
          p[0].tokenValue('%tomatometerScore') +
          '</b>'
        );
      }

      function tomatoIcon(score) {
        var tomatoIconFresh =
          '<absolute><icon color=#FA320A margin_top=2 size=14 verticalAlign=bottom path=m78.3 43.3c-0.8-12.4-7.1-21.6-16.5-26.8 0.1 0.3-0.2 0.7-0.5 0.5-6.2-2.7-16.7 6.1-24 1.5 0.1 1.6-0.3 9.7-11.6 10.1-0.3 0-0.4-0.3-0.2-0.5 1.5-1.7 3-6.1 0.8-8.4-4.7 4.2-7.4 5.8-16.5 3.7-5.8 6-9.1 14.3-8.4 24.6 1.3 21 21 33 40.8 31.8 19.9-1.1 37.5-15.5 36.1-36.5>' +
          '<icon color=#00912D size=12 margin_top=-3 verticalAlign=bottom path=m42.2 11.5c4.1-1 15.8-0.1 19.6 4.9 0.2 0.3-0.1 0.9-0.5 0.7-6.2-2.7-16.7 6.1-24 1.5 0.1 1.6-0.3 9.7-11.6 10.1-0.3 0-0.4-0.3-0.2-0.5 1.5-1.7 3-6.1 0.8-8.4-5.1 4.6-7.9 6.1-19 3.1-0.4-0.1-0.3-0.7 0.1-0.9 2.1-0.8 6.9-4.3 11.4-5.9 0.9-0.3 1.7-0.5 2.5-0.7-5-0.4-7.2-1.1-10.4-0.7-0.3 0.1-0.6-0.4-0.4-0.6 4.3-5.5 12.1-7.1 16.9-4.2-3-3.7-5.3-6.6-5.3-6.6l5.5-3.1s2.3 5.1 3.9 8.8c4.1-6.1 11.8-6.6 15-2.3 0.2 0.3 0 0.6-0.3 0.6-2.5-0.1-3.9 2.3-4 4.2></absolute>';
        var tomatoIconRotten =
          '<icon color=#0AC855 size=14 verticalAlign=middle path=m71.5 71.5c-15.1 0.8-18.2-16.5-24.1-16.4-2.5 0.1-4.5 2.7-3.6 5.8 0.5 1.7 1.8 4.2 2.7 5.7 3 5.4-1.4 11.6-6.5 12.1-8.5 0.9-12.1-4.1-11.9-9.1 0.2-5.7 5.1-11.5 0.1-14-5.2-2.6-9.4 7.5-14.3 9.8-4.5 2-10.7 0.5-12.9-4.5-1.8-3.6-1.5-10.3 5.4-12.9 4.3-1.6 14 2.1 14.5-2.6 0.6-5.4-10.1-5.9-13.3-7.2-5.8-2.2-9.1-7.1-6.5-12.4 2-4 7.8-5.6 12.2-3.8 5.3 2.1 6.2 7.6 8.9 9.9 2.3 2 5.6 2.2 7.7 0.9 1.5-1 2.1-3.2 1.5-5.2-0.8-2.7-2.8-4.3-4.8-6-3.6-3-8.7-5.5-5.6-13.4 2.5-6.5 9.8-6.7 9.8-6.7 2.9-0.3 5.5 0.6 7.7 2.5 2.8 2.5 3.4 5.9 2.9 9.6-0.4 3.3-1.6 6.2-2.2 9.5-0.7 3.8 1.3 7.6 5.2 7.8 5.1 0.2 6.6-3.7 7.2-6.2 0.9-3.6 2.1-7 5.5-9.1 4.8-3 11.5-2.4 14.6 3.5 2.5 4.6 1.7 11-2.1 14.5-1.7 1.6-3.7 2.1-5.9 2.1-3.2 0-6.3-0.1-9.2 1.4-2 1-2.9 2.6-2.9 4.8 0 2.1 1.1 3.5 2.9 4.5 3.4 1.7 7.2 2.1 10.8 2.7 5.3 0.9 10 2.8 13 7.8l0.1 0.1c3.5 5.7-0.1 14.1-6.9 14.5>';
        return score > 60 ? tomatoIconFresh + ' ' + score + '%' : tomatoIconRotten + ' ' + score + '%';
      }
    </script>
  </body>
</html>
