<!DOCTYPE html>
<html lang="en">
  <head>
    <title>Grid Dynamic | JSCharting</title>
    <meta http-equiv="content-type" content="text-html; charset=utf-8" />

    <script type="text/javascript" src="../jsc/jscharting.js"></script>

    <script type="text/javascript" src="../jsc/modules/datagrid.js"></script>

    <link rel="stylesheet" type="text/css" href="css/default.css" />

    <style>
      /*CSS*/
      #controls {
        max-width: 430px;
        margin: 5px auto;
        justify-content: center;
        display: flex;
        flex-wrap: wrap;
      }
      #controls div {
        padding: 5px 10px;
        margin: 3px 0px;
        cursor: pointer;
        font-size: 13px;
        font-family: tahoma, geneva, sans-serif;
        color: #0277bd;
        // border-radius:15px;
      }
      .active {
        background-color: #eceff1;
      }
      #controls div#groupByWrapper {
        flex-grow: 3;
        text-align: right;
        color: #424242;
      }
      @media (max-width: 400px) {
        #controls {
          justify-content: flex-start;
        }
        #controls div#groupByWrapper {
          text-align: left;
        }
      }
    </style>
  </head>
  <body>
    <div id="chartDiv" style="max-width: 800px; height: 400px; margin: 0px auto;"></div>
    <div id="controls">
      <div id="dayBtn" class="categoryTab">Daily</div>
      <div id="weekBtn" class="categoryTab">Week</div>
      <div id="monthBtn" class="categoryTab active">Month</div>
      <div id="weekdayBtn" class="categoryTab">Weekday</div>
      <div id="groupByWrapper">
        <label for="calculationDD">Group by: </label>
        <select id="calculationDD">
          <option>sum</option>
          <option>mean</option>
          <option>min</option>
          <option>max</option>
        </select>
      </div>
    </div>
    <div id="container" style="max-width: 430px; height: 450px; margin: 0px auto;"></div>

    <script type="text/javascript">
      /*
Datagrid and chart combination displaying step data.
Learn how to:

  - Show dynamic data in grid and chart.
*/
      // JS
      var grid = undefined,
        chart = undefined;
      var nest,
        stepData,
        year = 2017,
        calcFn = 'sum',
        groupingBy = 'month',
        dateFormatters = { month: 'date MMM', week: 'date d', day: 'date d', weekday: 'n' },
        maxValues = { month: 200000, week: 100000, day: 20000, weekday: 350000 },
        firstColHeaders = { month: 'Month', week: 'Week', day: 'Day', weekday: 'Weekday' },
        secondColHeaders = { sum: 'Sum', min: 'Min', max: 'Max', mean: 'Mean' };

      weekdays = 'Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday'.split(',');

      function defaultChartConfig() {
        return {
          xAxis_label_text: 'Date',
          yAxis_label_text: 'Steps',
          xAxis_scale_interval: { unit: 'month' },
          legend_visible: false,
          defaultPoint_marker_type: 'none',
        };
      }

      function viewToOptions(view, calc) {
        var max = calc === 'sum' ? maxValues[view] : 20000;
        return {
          columns: [
            { header: firstColHeaders[view], value: '{%xValue:' + dateFormatters[view] + '}' },
            { header: secondColHeaders[calc], value: '{%yValue:n0}' },
            {
              header: '<chart scale data=0,' + max + 'K color=white>',
              value: '<chart bar colors=#0277bd,,#ddd data=%yValue max=' + max + '>',
              align: 'center',
            },
            { header: 'Daily', value: '<chart sparkline data=%list>', align: 'center' },
          ],
        };
      }

      JSC.fetch('./resources/stepData17-18.csv')
        .then(function (response) {
          return response.text();
        })
        .then(function (text) {
          setCsv(text);
          setDataView(groupingBy);
          selectCategory();
          var chartOptions = defaultChartConfig();

          chartOptions.series = nest.series(stepData);
          chart = new JSC.Chart('chartDiv', chartOptions, function (c) {
            c.toGrid('container', viewToOptions(groupingBy, 'sum')).then(function (g) {
              grid = g;
            });
          });
        });

      function setCsv(text) {
        stepData = JSC.csv2Json(text);
      }

      function setDataView(groupBy, calculation) {
        groupingBy = groupBy;
        calcFn = calculation || calcFn;
        nest = JSC.nest()
          .key({ key: 'Date', pattern: groupBy, range: ['1/1/2017', '12/31/2017'] })
          .rollup('Actual')
          .pointRollup(rollupFn);

        function rollupFn(key, values) {
          if (groupingBy === 'weekday') {
            return {
              x: weekdays[key],
              y: JSC[calcFn](values),
              attributes: { list: values.join(',') },
            };
          }
          return {
            x: key,
            y: JSC[calcFn](values),
            attributes: { list: values.join(',') },
          };
        }
      }
      function selectCategory() {
        var tabs = document.getElementsByClassName('categoryTab');
        for (var i = 0; i < tabs.length; i++) {
          tabs[i].addEventListener('click', function () {
            var current = document.getElementsByClassName('active');
            current[0].className = current[0].className.replace(' active', '');
            this.className += ' active';
          });
        }
      }
      function redraw(groupBy) {
        var calEl = document.getElementById('calculationDD');
        var calc = calEl.options[calEl.selectedIndex].text;
        setDataView(groupBy, calc);

        grid && grid.options(viewToOptions(groupBy, calc), false);
        chart.series(0).options({ points: nest.points(stepData) });
      }

      (function attachEvents() {
        document.getElementById('dayBtn').addEventListener('click', function () {
          redraw('day');
        });
        document.getElementById('weekBtn').addEventListener('click', function () {
          redraw('week');
        });
        document.getElementById('monthBtn').addEventListener('click', function () {
          redraw('month');
        });
        document.getElementById('weekdayBtn').addEventListener('click', function () {
          redraw('weekday');
        });
        document.getElementById('calculationDD').addEventListener('change', function () {
          redraw(groupingBy);
        });
      })();
    </script>
  </body>
</html>
